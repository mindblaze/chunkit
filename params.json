{"name":"Chunked-stream","tagline":"A simple and lightweight stream data chunking module for NodeJS","body":"# Chunk It\r\n\r\n[![Build Status](https://travis-ci.org/mindblaze/chunkit.png?branch=master)](https://travis-ci.org/mindblaze/chunkit)\r\n[![Dependency Status](https://www.versioneye.com/user/projects/533d32527bae4be0c7000242/badge.png)](https://www.versioneye.com/user/projects/533d32527bae4be0c7000242)\r\n[![NPM version](https://badge.fury.io/js/chunkit.png)](http://badge.fury.io/js/chunkit)\r\n\r\n[![NPM stats](https://nodei.co/npm/chunkit.png?downloads=true)](https://www.npmjs.org/package/chunkit)\r\n\r\nA simple and light-weight interface to chunk stream data.\r\n\r\n\r\n## Benefits & Features\r\n* Super fast and super easy to use\r\n* Low memory usage\r\n* Nothing hits the disk\r\n\r\n\r\n## Installation\r\n\r\n```\r\n$ npm install chunkit\r\n```\r\n\r\n\r\n## Example Usage\r\n\r\n\r\n### Example 1: Callback for 1MB chunks from a readable stream.\r\n\r\n```js\r\nvar chunkit = require('chunked-stream'),\r\n    fs = require('fs');\r\n\r\nvar fStream = fs.CreateReadStream(__dirname + '/video.mp4');\r\nvar chunkStream = new chunkit(fStream, {bytes: 1024*1024}, function (err, chunk) {\r\n\tif (err) return console.error('Error: ', err);\r\n\t\r\n\t// Do whatever you want with your 1MB chunk.\r\n\tconsole.log('Bytes: ', chunk.data.length);\r\n\t\r\n});\r\n```\r\n\r\n### Example 2: Without callback (Evented)\r\n\r\n```js\r\nvar chunkit = require('chunked-stream'),\r\n    fs = require('fs');\r\n\r\nvar fStream = fs.CreateReadStream(__dirname + '/video.mp4');\r\nvar chunkStream = new chunkit(fStream, {bytes: 1024*1024});\r\n\r\nchunkStream.on('error', function (err) {\r\n\tconsole.log('Error: ', err);\r\n});\r\n\r\nchunkStream.on('chunk', function (chunk) {\r\n\tconsole.log('Bytes: ', chunk.data.length);\r\n});\r\n\r\nchunkStream.on('end', function (stats) {\r\n\tconsole.log('Stats: ', stats);\r\n});\r\n\r\n// Important when no callback provided.\r\nchunkStream.begin();\r\n```\r\n\r\n## Options\r\n\r\n* **bytes (Integer)** - Parts that are uploaded simultaneously.\r\n* **start (Integer)** (Default: 0) - start chunking stream from byte number.\r\n* **end (Integer)** (Default: end of file) - chunk till byte number.\r\n\r\n\r\n## Chunk Object\r\n\r\n* **index (Integer)** - chunk index, starting from 1\r\n* **data (Buffer)** - Underlying chunked buffer.\r\n* **last (Boolean)** - True if its the last chunk.\r\n\r\n\r\n## History\r\n\r\n* v0.0.1 (2014-04-03) -- Initial release.\r\n\r\n\r\n## License\r\n\r\nThe MIT License (MIT)\r\n\r\nCopyright (c) 2014 Talha Asad\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.","google":"UA-49019483-1","note":"Don't delete this file! It's used internally to help with page regeneration."}